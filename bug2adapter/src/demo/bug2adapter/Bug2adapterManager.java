/*******************************************************************************
 * Copyright (c) 2011, 2012 IBM Corporation and others.
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 *  
 *  The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 *  and the Eclipse Distribution License is available at
 *  http://www.eclipse.org/org/documents/edl-v10.php.
 *  
 *  Contributors:
 *  
 *	   Sam Padgett	       - initial API and implementation
 *     Michael Fiedler     - adapted for OSLC4J
 *     Jad El-khoury        - initial implementation of code generator (https://bugs.eclipse.org/bugs/show_bug.cgi?id=422448)
 *
 * This file is generated by org.eclipse.lyo.oslc4j.codegenerator
 *******************************************************************************/

package demo.bug2adapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.ServletContextEvent;
import java.util.List;

import demo.bug2adapter.ServiceProviderInfo;
		import demo.bug2adapter.resources.Bug2ChangeRequest;
		import demo.bug2adapter.resources.ChangeRequest;
		import demo.bug2adapter.resources.Person;
		import demo.bug2adapter.resources.Type;

// Start of user code imports
// End of user code


// Start of user code pre_class_code
// End of user code

public class Bug2adapterManager {

	// Start of user code class_attributes
	// End of user code
	
	// Start of user code class_methods
	// End of user code


    public static void contextInitializeServletListener(final ServletContextEvent servletContextEvent)
    {
		// Establish connection to data backbone etc ...
		// Start of user code contextInitializeServletListener
		// End of user code
    }

	public static void contextDestroyServletListener(ServletContextEvent servletContextEvent) 
	{
		// Shutdown connections to data backbone etc...
		// Start of user code contextDestroyed
		// End of user code
	}



    public static ServiceProviderInfo [] getServiceProviderInfos(HttpServletRequest httpServletRequest)
    {
		ServiceProviderInfo [] serviceProviderInfos = {};
		// Start of user code (MUST_FILL_IN) getServiceProviderInfos userCode
		// End of user code
		return serviceProviderInfos;
    }

    public static Bug2ChangeRequest getBug2ChangeRequest(HttpServletRequest httpServletRequest, String bug2ChangeRequestId, String serviceProviderId)
    {
		Bug2ChangeRequest aBug2ChangeRequest = null;
		// Start of user code (MUST_FILL_IN) getResource userCode
		// End of user code
		return aBug2ChangeRequest;
    }

    public static List<Bug2ChangeRequest> getBug2ChangeRequests(HttpServletRequest httpServletRequest, String serviceProviderId, int page, int limit)
    {
		List<Bug2ChangeRequest> bug2ChangeRequests = null;
		// Start of user code (MUST_FILL_IN) getResources userCode
		// End of user code
		return bug2ChangeRequests;
    }

    public static List<Bug2ChangeRequest> searchBug2ChangeRequests(HttpServletRequest httpServletRequest, String serviceProviderId, String terms)
    {
		List<Bug2ChangeRequest> bug2ChangeRequests = null;
		// Start of user code (MUST_FILL_IN) searchResources userCode
		// End of user code
		return bug2ChangeRequests;
    }

    public static Bug2ChangeRequest createBug2ChangeRequest(HttpServletRequest httpServletRequest, final Bug2ChangeRequest aBug2ChangeRequest, final String serviceProviderId)
    {
		Bug2ChangeRequest newBug2ChangeRequest = null;
		// Start of user code (MUST_FILL_IN) createResource userCode
		// End of user code
		return newBug2ChangeRequest;
    }

}

